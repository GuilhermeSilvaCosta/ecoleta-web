{"version":3,"sources":["assets/logo.svg","pages/Home/index.tsx","services/api.ts","components/Dropzone/index.tsx","pages/CreatePoint/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","Home","id","className","src","logo","alt","to","api","axios","create","baseURL","Dropzone","onFileUploaded","useState","selectedFileUrl","setSelectedFileUrl","onDrop","useCallback","acceptedFiles","file","fileUrl","URL","createObjectURL","useDropzone","accept","getRootProps","getInputProps","CreatePoint","citys","setCitys","name","email","whatsapp","formData","setFormData","initialPosition","setInitialPosition","items","setItems","ufs","setUfs","selectedCity","setSelectedCity","selectedUf","setSelectedUf","selectedPosition","setSelectedPosition","selectedItems","setSelectedItems","selectedFile","setSelectedFile","history","useHistory","handleInputChange","e","target","value","a","preventDefault","uf","city","latitude","longitude","data","FormData","append","String","join","post","alert","push","useEffect","get","response","ufInitials","map","sigla","loadItems","loadUfs","navigator","geolocation","getCurrentPosition","position","coords","cityNames","nome","loadCitys","onSubmit","htmlFor","type","onChange","Map","center","zoom","onClick","latlng","lat","lng","TileLayer","attribution","url","Marker","key","item","includes","filter","image_url","title","Routes","path","component","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a69f6f5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import React from 'react';\nimport { FiLogIn } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\n\nimport logo from '../../assets/logo.svg';\n\nimport './styles.css'\n\nconst Home: React.FC = () => {\n  return (\n    <div id=\"page-home\">\n      <div className=\"content\">\n        <header>\n          <img src={logo} alt=\"Ecoleta\" />\n        </header>\n           \n        <main>\n          <h1>Seu marketplace de coleta de residuos.</h1>\n          <p>Ajudamos pessoas a encontrar ponstos de coleta de forma inteligente</p>\n\n          <Link to=\"/create-point\">\n            <span>\n              <FiLogIn />\n            </span>\n            <strong>Cadastre um ponto de coleta</strong>\n          </Link>\n        </main>\n      </div>    \n    </div>\n  );\n}\n\nexport default Home;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://ecoleta-api-zfd6wyvr3q-uc.a.run.app'\n});\n\nexport default api;","import React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FiUpload } from 'react-icons/fi'\n\nimport './styles.css';\n\ninterface Props {\n    onFileUploaded: (file: File) => void;\n}\n\nconst Dropzone: React.FC<Props> = ({ onFileUploaded }) => {\n\n    const [selectedFileUrl, setSelectedFileUrl] = useState('');\n\n    const onDrop = useCallback(acceptedFiles => {\n        const file = acceptedFiles[0];\n\n        const fileUrl = URL.createObjectURL(file);\n\n        setSelectedFileUrl(fileUrl);\n        onFileUploaded(file);\n    }, [onFileUploaded]);\n\n    const { getRootProps, getInputProps } = useDropzone({ \n        onDrop, \n        accept: 'image/*'\n    });\n\n    return (\n        <div className=\"dropzone\" {...getRootProps()}>\n            <input {...getInputProps()} accept=\"image/*\" />\n\n            { selectedFileUrl \n                ? <img src={selectedFileUrl} alt=\"Point thumbnail\" />\n                : (\n                    <p>\n                        <FiUpload />\n                        Imagem do estabelecimento\n                    </p>\n                )\n            }\n        </div>\n    );\n}\n\nexport default Dropzone;","import React, { useState, useEffect, ChangeEvent, FormEvent } from 'react';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport { LeafletMouseEvent } from 'leaflet';\n\nimport Dropzone from '../../components/Dropzone';\n\nimport logo from '../../assets/logo.svg';\n\nimport './styles.css';\n\ninterface Item {\n  id: number;\n  name: string;\n  title: string;\n  image_url: string;\n}\n\ninterface IBGEUFResponse {\n  sigla: string;\n}\n\ninterface IBGECityResponse {\n  nome: string;\n}\n\nconst CreatePoint: React.FC = () => {\n\n  const [citys, setCitys] = useState<string[]>([])\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  })\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([0, 0])\n  const [items, setItems] = useState<Item[]>([]);\n  const [ufs, setUfs] = useState<string[]>([]);\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0]);\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\n  const [selectedFile, setSelectedFile] = useState<File>();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    async function loadItems() {\n      const response = await api.get('items');\n      setItems(response.data);\n    }\n    loadItems();\n\n    async function loadUfs() {\n      const response = await api.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome');\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    }\n    loadUfs();\n\n    navigator.geolocation.getCurrentPosition(position => {\n      const { latitude, longitude } = position.coords;\n\n      setInitialPosition([latitude, longitude]);\n    });\n  }, [])\n\n  useEffect(() => {\n    async function loadCitys() {\n      if (selectedUf === '0') return;\n      const response = await api.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\n\n      const cityNames = response.data.map(city => city.nome);\n      setCitys(cityNames);\n    }\n    loadCitys();\n  }, [selectedUf])\n\n  function handleSelectUf(e: ChangeEvent<HTMLSelectElement>) {\n    setSelectedUf(e.target.value);\n  }\n\n  function handleSelectCity(e: ChangeEvent<HTMLSelectElement>) {\n    setSelectedCity(e.target.value);\n  }\n\n  function handleMapClick(e: LeafletMouseEvent) {\n    setSelectedPosition([e.latlng.lat, e.latlng.lng])\n  }\n\n  function handleInputChange(e: ChangeEvent<HTMLInputElement>) {\n    setFormData({ ...formData, [e.target.name]: e.target.value})\n  }\n\n  function handleSelectItem(id: number) {\n    if (selectedItems.includes(id)) {\n      setSelectedItems(selectedItems.filter(item => item !== id));\n    } else {\n      setSelectedItems([ ...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(e: FormEvent) {\n    e.preventDefault();\n\n\n\n    const { name, email, whatsapp } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n\n    const data = new FormData();\n\n    data.append('name', name);\n    data.append('email', email);\n    data.append('whatsapp', whatsapp);\n    data.append('uf', uf);\n    data.append('city', city);\n    data.append('latitude', String(latitude));\n    data.append('longitude', String(longitude));\n    data.append('items', items.join(','));\n    \n    if (selectedFile) {\n      data.append('image', selectedFile)\n    }\n\n    await api.post('points', data);\n\n    alert('Ponto de colera criado!');\n\n    history.push('/');\n  }\n\n  return (\n    <div id=\"page-create-point\">\n      <header>\n        <img src={logo} alt=\"Ecoleta\" />\n\n        <Link to=\"/\">\n          <FiArrowLeft />\n          Voltar para home\n        </Link>\n      </header>\n\n      <form onSubmit={handleSubmit}>\n        <h1>Cadastro do <br /> ponto de coleta</h1>\n\n        <Dropzone onFileUploaded={setSelectedFile} />\n\n        <fieldset>\n          <legend>\n            <h2>Dados</h2>\n          </legend>\n\n          <div className=\"field\">\n            <label htmlFor=\"name\">Nome da entidade</label>\n            <input \n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              onChange={handleInputChange}\n              value={formData.name}\n            />\n          </div>\n\n          <div className=\"field-group\">\n            <div className=\"field\">\n              <label htmlFor=\"email\">Email</label>\n              <input \n                type=\"Email\"\n                name=\"email\"\n                id=\"Email\"\n                onChange={handleInputChange}\n                value={formData.email}\n              />\n            </div>\n\n            <div className=\"field\">\n              <label htmlFor=\"whatsapp\">Whatsapp</label>\n              <input \n                type=\"text\"\n                name=\"whatsapp\"\n                id=\"whatsapp\"\n                onChange={handleInputChange}\n                value={formData.whatsapp}\n              />\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset>\n          <legend>\n            <h2>Endereço</h2>\n            <span>Selecione o endereço no mapa</span>\n          </legend>\n\n          <Map center={initialPosition} zoom={15} onClick={handleMapClick}>\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker position={selectedPosition} />\n          </Map>\n\n          <div className=\"field-group\">\n            <div className=\"field\">\n              <label htmlFor=\"uf\">Estado (UF)</label>\n              <select value={selectedUf} name=\"uf\" id=\"uf\" onChange={handleSelectUf}>\n                <option value=\"0\">Selecione a UF</option>\n                {ufs.map(uf => (\n                  <option key={uf} value={uf}>{uf}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"field\">\n              <label htmlFor=\"city\">Cidade</label>\n              <select name=\"city\" id=\"city\" value={selectedCity} onChange={handleSelectCity}>\n                <option value=\"0\">Selecione a Cidade</option>\n                {citys.map(city => (\n                  <option key={city} value={city}>{city}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset>\n          <legend>\n            <h2>Itens de coleta</h2>\n          </legend>\n\n          <ul className=\"items-grid\">\n            {items.map(item => \n              <li \n                key={item.id} \n                onClick={() => handleSelectItem(item.id)}\n                className={selectedItems.includes(item.id) ? 'selected' : ''}\n              >\n                <img src={item.image_url} alt={item.title} />\n                <span>{item.title}</span>\n              </li>\n            )}\n          </ul>\n        </fieldset>\n\n        <button type=\"submit\">\n          Cadastrar ponto de coleta\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreatePoint;","import React from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport CreatePoint from './pages/CreatePoint';\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/create-point\" component={CreatePoint} />\n    </BrowserRouter>\n  )\n}\n\nexport default Routes;","import React from 'react';\n\nimport Routes from './routes';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}